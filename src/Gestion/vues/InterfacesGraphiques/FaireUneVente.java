/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gestion.vues.InterfacesGraphiques;

import Gestion.controllers.ClassMetiers.ClientMetier;
import Gestion.controllers.ClassMetiers.ProduitMetier;
import Gestion.controllers.ClassMetiers.TVA;
import Gestion.passerelle.Passerelle;
import Gestion.utils.Utils;
import Gestion.vues.Messages.LesDonnees;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.json.simple.JSONObject;

/**
 *
 * @author christian
 */
public class FaireUneVente extends javax.swing.JFrame {
    private String[] titre = {"Code","Produit", "Quantite", "prix unitaire", "prix totale"};
    private JSONObject fiche = Gestion.utils.Utils.provider("Documents/parametres/param.properties");
    private JSONObject requette;
    private JSONObject message;
    private Passerelle passerelle;
    private Object[][] donneeTab;
    private JSONObject pannierdesproduits;
    private String Facture;
    private ClientMetier client;
    private int total = 0;
    private int tva = 0;
    private boolean peutVendre;
    private String remises;
    /**
     * Creates new form FaireUneVente
     */
    public FaireUneVente() {
        initComponents();
        this.setIconImage(new ImageIcon("Documents/Images/logo.png").getImage());
        donneeTab = new Object[0][4];
        placerlesDonnees();
        peutVendre = false;
        swichPretVente();
        qte.setValue(1);
        remises = " ";
    }
    
    public JPanel getContainer(){
        return this.container;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        previsualisation = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        espace = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        pannier = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableau = new javax.swing.JTable();
        commande = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        listeProduits = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        qte = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        pu = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        listeClients = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        stock = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        realPU = new javax.swing.JTextField();
        code = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        Est_un_pret = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        avance = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        desc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        container.setBackground(new java.awt.Color(255, 255, 255));
        container.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        previsualisation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        espace.setEditable(false);
        espace.setColumns(20);
        espace.setFont(new java.awt.Font("Monospaced", 2, 13)); // NOI18N
        espace.setRows(5);
        jScrollPane2.setViewportView(espace);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Show.png"))); // NOI18N
        jButton3.setText("Appercue");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Print.png"))); // NOI18N
        jButton4.setText("Vendre");
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout previsualisationLayout = new javax.swing.GroupLayout(previsualisation);
        previsualisation.setLayout(previsualisationLayout);
        previsualisationLayout.setHorizontalGroup(
            previsualisationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previsualisationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(previsualisationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(previsualisationLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        previsualisationLayout.setVerticalGroup(
            previsualisationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previsualisationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(previsualisationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pannier.setBackground(new java.awt.Color(255, 255, 255));
        pannier.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produit", "Quantite", "prix unitaire", "prix totale"
            }
        ));
        tableau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableauMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableau);

        javax.swing.GroupLayout pannierLayout = new javax.swing.GroupLayout(pannier);
        pannier.setLayout(pannierLayout);
        pannierLayout.setHorizontalGroup(
            pannierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1276, Short.MAX_VALUE)
        );
        pannierLayout.setVerticalGroup(
            pannierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannierLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
        );

        commande.setBackground(new java.awt.Color(255, 255, 255));
        commande.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Produit");

        listeProduits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeProduitsActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Quantit√©");

        qte.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Prix unitaire");

        pu.setEditable(false);
        pu.setBackground(new java.awt.Color(204, 255, 255));
        pu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Prix Total");

        pt.setEditable(false);
        pt.setBackground(new java.awt.Color(204, 255, 255));
        pt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Clipboard.png"))); // NOI18N
        jButton1.setText("Reset");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/1438268247_shopcartdown_32x32.png"))); // NOI18N
        jButton2.setText("Ajouter");
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Client");

        listeClients.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fodoup kamdem christian", "Sinda ngueufack durand", "Kana nguimfack kevin" }));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Create.png"))); // NOI18N
        jButton5.setToolTipText("Ajouter ou modifier un Client");
        jButton5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        stock.setEditable(false);
        stock.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        stock.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stock.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Paste.png"))); // NOI18N
        jButton6.setText("Nouvelle vente");
        jButton6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        realPU.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        realPU.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        realPU.setText("0");

        code.setBackground(new java.awt.Color(204, 255, 204));
        code.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        code.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Code du produit");

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Search.png"))); // NOI18N
        jButton7.setText("Charger");
        jButton7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        Est_un_pret.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Est_un_pret.setText("Est un Pret");
        Est_un_pret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Est_un_pretActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Montant Avanc√©");

        avance.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        avance.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Description");

        desc.setEditable(false);
        desc.setBackground(new java.awt.Color(153, 153, 255));
        desc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        desc.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout commandeLayout = new javax.swing.GroupLayout(commande);
        commande.setLayout(commandeLayout);
        commandeLayout.setHorizontalGroup(
            commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commandeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(commandeLayout.createSequentialGroup()
                        .addComponent(Est_un_pret, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(avance, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(commandeLayout.createSequentialGroup()
                        .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(commandeLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commandeLayout.createSequentialGroup()
                                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(desc, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(commandeLayout.createSequentialGroup()
                                        .addComponent(listeProduits, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(8, 8, 8)
                                        .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(pt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(commandeLayout.createSequentialGroup()
                                        .addComponent(pu)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(realPU))
                                    .addGroup(commandeLayout.createSequentialGroup()
                                        .addComponent(qte, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(listeClients, 0, 525, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18))))))
        );
        commandeLayout.setVerticalGroup(
            commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commandeLayout.createSequentialGroup()
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(commandeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(code))
                    .addGroup(commandeLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(listeProduits, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stock))
                .addGap(18, 18, 18)
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commandeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(qte, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(listeClients)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(realPU, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(desc, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Est_un_pret, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(avance, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addComponent(commande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previsualisation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pannier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(previsualisation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(commande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pannier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableauMouseClicked
        PagePrincipale.AfficherMessage("Message",0);
        actionTableau();
    }//GEN-LAST:event_tableauMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        placerTableau();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        SaveClient sv = new SaveClient(this,true);
        sv.setVisible(true);
        if(sv.isaPuSauvegarder()){
            LesDonnees.initData(4);
            placerlesDonnees();
            reset();
            String m = sv.getNom().getText()+" "+sv.getPrenom().getText();
            listeClients.setSelectedItem(m);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void listeProduitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeProduitsActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        placerLesPrixUnitaire();
    }//GEN-LAST:event_listeProduitsActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        previsualisation();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        Vendre();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        nouvelleVente();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void puActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_puActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        loadBycode();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void Est_un_pretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Est_un_pretActionPerformed
        swichPretVente();
    }//GEN-LAST:event_Est_un_pretActionPerformed
    
    private void loadBycode(){
        String cond = "code = '"+code.getText()+"'";
        String ord = "code asc";
        int act = 12;
        JSONObject data = LesDonnees.getobjet(cond, ord, act);
        try{
            ProduitMetier p = (ProduitMetier) data.get("message");
            if(p.getQuantite()<=0){
                PagePrincipale.AfficherMessage("Ce produit est fini en stock !!!",3);
                pu.setText("0");
                stock.setText("0");
            }
            else{
                listeProduits.setSelectedItem(p.getCode()+" --- "+p.getDesignation());
                pu.setText(""+p.getPrix_unitaire_de_vente());
                desc.setText(Gestion.utils.DataUtils.getProduitDescription(p.getCode()));
                int quant = p.getQuantite();
                if(quant==0){
                    stock.setForeground(Color.red);
                }else{
                    if(quant<=20){
                        stock.setForeground(Color.orange);
                    }else{
                       stock.setForeground(Color.black); 
                    }
                }
                stock.setText(""+quant);
            }
        }catch(Exception e){
            //e.printStackTrace();
            PagePrincipale.AfficherMessage("Produit Inexistant ou code incorrect !!!",2);
        }
    }
    
    private void swichPretVente(){
        if(!Est_un_pret.isSelected()){
            avance.setBackground(Color.darkGray);
            avance.setText("0");
            avance.setEditable(false);
        }else{
            avance.setBackground(Color.white);
            avance.setText("0");
            avance.setEditable(true);
        }
    }
    
    private void placerlesDonnees(){
        try{
            Set produits = LesDonnees.lesproduits.keySet();
            Set clients = LesDonnees.lesclients.keySet();
            listeProduits.setModel(new javax.swing.DefaultComboBoxModel(produits.toArray()));
            listeClients.setModel(new javax.swing.DefaultComboBoxModel(clients.toArray()));
            placerLesPrixUnitaire();
        }catch(Exception e){
            PagePrincipale.AfficherMessage("Pas de produit en stock", 2);
        }
    }
    
    private void placerLesPrixUnitaire(){
        String m = listeProduits.getSelectedItem().toString();
        code.setText(((ProduitMetier)LesDonnees.lesproduits.get(m)).getCode());
        desc.setText(Gestion.utils.DataUtils.getProduitDescription(code.getText()));
        pu.setText(""+((ProduitMetier)LesDonnees.lesproduits.get(m)).getPrix_unitaire_de_vente());
        int quant = ((ProduitMetier)LesDonnees.lesproduits.get(m)).getQuantite();
        if(quant<=5){
            stock.setForeground(Color.red);
        }else{
            if(quant<=10){
                stock.setForeground(Color.orange);
            }else{
               stock.setForeground(Color.black); 
            }
        }
        stock.setText(""+quant);
    }
    
    private void placerPrixTotal(){
        try {
            int quatite = (int)qte.getValue();
            if(quatite<0) quatite = 0;
            if(Gestion.utils.Utils.ObjectToInt(realPU.getText())==0) realPU.setText(pu.getText());
            pt.setText(""+(quatite*Gestion.utils.Utils.ObjectToInt(realPU.getText())));
        } catch (Exception ex) {
            Gestion.utils.Utils.addMessage(ex.toString(),true);
        }
    }
    
    private void nouvelleVente(){
        donneeTab = new Object[0][4];
        espace.setText("");
        peutVendre = false;
        remises = " ";
        tableau.setModel(new javax.swing.table.DefaultTableModel(donneeTab,titre));
    }
    
    private boolean testExistance(){
        boolean flag = false;
        for (int i = 0; i < tableau.getRowCount(); i++) {
            if(tableau.getValueAt(i, 0).equals(code.getText())){
                flag = true;
            }
        }
        return flag;
    }
    
    private boolean testQte(){
        int qte1 = (int)qte.getValue();
        int qte2 = Integer.parseInt(stock.getText());
        return (qte1<=qte2 && qte1>0);
    }
    
    private boolean testcode(){
        boolean flag = true;
        if((code.getText().length() != 5) || !(code.getText().equals(listeProduits.getSelectedItem().toString().substring(0,5)))){
            flag = false;
        }
        return flag;
    }
    
    private boolean testSeuil(){
        boolean flag = false;
        int n = -1;
        int r = ((ProduitMetier)LesDonnees.lesproduits.get(listeProduits.getSelectedItem())).getSeiulLimite();
        try{
            n = Integer.parseInt(realPU.getText());
        }catch(Exception e){n=-1;}
        if(n==-1) {flag = false; n = 0;}
        else{
            if(n==0) n = Integer.parseInt(pu.getText());
            flag = r <= n;
        }
        if(!flag){
            String m = Gestion.utils.Utils.provider("Documents/parametres/param.properties").get("unite_Monaie").toString();
            r = r-n;            
            int reponse = JOptionPane.showConfirmDialog(null, "Voulez vous faire une remise de "+r+" "+m+" pour valider cet achat ?", "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(reponse == JOptionPane.YES_OPTION){
                flag = !flag;
                m = "Une remise de "+r+" "+m+" a √©t√© faite sur le produit "+code.getText();
                PagePrincipale.AfficherMessage(m, 2);
                remises += "\n"+m;
            }
        }
        return flag;
    }
    
    private void placerTableau(){
        placerPrixTotal();
        if(testQte()){
            if(testSeuil()){
                if(testcode()){
                    if(testExistance()){
                        int n = 0;
                        for (int i = 0; i < tableau.getRowCount(); i++) {
                            if(tableau.getValueAt(i,0).equals(code.getText())){
                                n = i;
                            }
                        }
                        donneeTab[n][0] = code.getText();
                        donneeTab[n][1] = listeProduits.getSelectedItem().toString();
                        donneeTab[n][2] = qte.getValue();
                        donneeTab[n][3] = realPU.getText();
                        donneeTab[n][4] = pt.getText();
                    }else{
                        Object[][] temp = donneeTab;
                        donneeTab = new Object[temp.length+1][titre.length];
                        for (int i = 0; i < temp.length; i++) {
                            donneeTab[i][0] = temp[i][0];
                            donneeTab[i][1] = temp[i][1];
                            donneeTab[i][2] = temp[i][2];
                            donneeTab[i][3] = temp[i][3];
                            donneeTab[i][4] = temp[i][4];
                        }
                        donneeTab[temp.length][0] = code.getText();
                        donneeTab[temp.length][1] = listeProduits.getSelectedItem().toString();
                        donneeTab[temp.length][2] = qte.getValue();
                        donneeTab[temp.length][3] = realPU.getText();
                        donneeTab[temp.length][4] = pt.getText();
                    }
                    tableau.setModel(new javax.swing.table.DefaultTableModel(donneeTab,titre));
                    reset();
                }else{
                    PagePrincipale.AfficherMessage("Erreur sur le code de ce produit verifier ce code !!!",3); 
                }
            }else{
               PagePrincipale.AfficherMessage("Le prix unitaire de cet article est inferieur au seuil Limite !!!",3); 
            }
        }else{
            PagePrincipale.AfficherMessage("La quantite demande√©e n'est pas possible",3);
        }
    }
    
    private void actionTableau(){
        int n = tableau.getSelectedRow();
        Object[][] temp = donneeTab;
        donneeTab = new Object[temp.length-1][titre.length];
        if(tableau.getModel().getRowCount()!=0){
            for (int i = 0; i <temp.length; i++) {
                if(i==n){
                    code.setText(""+temp[i][0]);
                    listeProduits.setSelectedItem(temp[i][1]);
                    qte.setValue(temp[i][2]);
                    pu.setText(""+((ProduitMetier)LesDonnees.lesproduits.get(temp[i][1])).getPrix_unitaire_de_vente());
                    realPU.setText(temp[i][3].toString());
                    pt.setText(temp[i][4].toString());
                }else{
                   donneeTab[i][0] = temp[i][0];
                   donneeTab[i][1] = temp[i][1];
                   donneeTab[i][2] = temp[i][2];
                   donneeTab[i][3] = temp[i][3];
                   donneeTab[i][4] = temp[i][4];
                }
            }
        }
        tableau.setModel(new javax.swing.table.DefaultTableModel(donneeTab,titre));
    }
    
    private void recupererPanier(){
        pannierdesproduits = new JSONObject();
        Facture = "";
        total = 0;
        String unite = fiche.get("unite_Monaie").toString();
        String typeenre = "vente";
        String avancement = avance.getText();
        if(Est_un_pret.isSelected()) typeenre = "pret";
        for (int i = 0; i < tableau.getRowCount(); i++) {
            ProduitMetier p = (ProduitMetier)LesDonnees.lesproduits.get(tableau.getValueAt(i,1));
            pannierdesproduits.put(i+"--"+tableau.getValueAt(i, 2)+"--"+tableau.getValueAt(i, 3)+"--"+typeenre+"--"+avancement+"--"+remises, p);
            total += Integer.parseInt(tableau.getValueAt(i,4).toString());
            Facture += tableau.getValueAt(i,1)+"     "+tableau.getValueAt(i,3)+" X "+tableau.getValueAt(i,2)+" = "+tableau.getValueAt(i,4)+" "+unite+"\n";
        }
        tva = TVA.getTVA(total);
        Facture += "\n**********************************************************************************";
        Facture += "\nTOTAL DES VENTES = "+total+" "+unite+"\n";
        Facture += "TVA = "+tva+" "+unite+"\n";
        Facture += " ********** Net √† payer: "+(tva+total)+" "+unite+"\n";
        try{
            if(Est_un_pret.isSelected()){
                int fin = (tva+total-Integer.parseInt(avance.getText()));
                if(fin>0){
                    Facture += "MONTANT AVANCE = "+avance.getText()+" "+unite+"\n";
                    Facture += " ********** RESTE A PAYER: "+fin+" "+unite+"\n";
                }else{
                    Facture += "MONTANT AVANCE = "+(tva+total)+" "+unite+"\n";
                    Facture += " ********** RESTE A PAYER: 0 "+unite+"\n";
                    PagePrincipale.AfficherMessage("Impossible d'enregistrer comme une dette car Avance >= Total !!! Veillez rembourser "+fin, 2);
                }
            }else{
                Facture += "MONTANT AVANCE = "+(tva+total)+" "+unite+"\n";
                Facture += " ********** RESTE A PAYER: 0 "+unite+"\n";        
            }
        }catch(Exception e){}
        Facture += "\n**********************************************************************************";
        Facture += "\nClient: "+listeClients.getSelectedItem()+"\n";
        Facture += "Vendeur: "+PageDeLogin.currentUser.getNom()+" "+PageDeLogin.currentUser.getPrenom();
        client = (ClientMetier) LesDonnees.lesclients.get(listeClients.getSelectedItem());
        
    }
    
    private void previsualisation(){
        recupererPanier();
        espace.setEditable(false);
        espace.setText(Facture);
    }
    
    private void Vendre(){
        previsualisation();
        if(!pannierdesproduits.isEmpty()) peutVendre = true;
        if(peutVendre){
            if(listeClients.getSelectedItem().toString().equals("Inconnu  ") && Est_un_pret.isSelected()){
                PagePrincipale.AfficherMessage("IMPOSSIBLE DE FAIRE UN PRET A UN INCONNU !!!",2);
            }else{
                message = new JSONObject();
                message.put("lesproduits",pannierdesproduits);
                message.put("client",client);
                requette = new JSONObject();
                requette.put("message",message);
                requette.put("user",PageDeLogin.currentUser);
                requette.put("action",9);
                passerelle = new Passerelle(requette);
                message = passerelle.ForwardQuery();
                if(message.get("code").equals("0")){
                    PagePrincipale.AfficherMessage(Gestion.vues.Messages.MessagePasserelle.success_ajoutvente,1);
                    //imprimer
                    ArrayList data = new ArrayList();
                    int num = Integer.parseInt(((JSONObject)(message.get("message"))).get("Numfacture").toString());
                    String num1 = Gestion.utils.Utils.mettreSous6Positions(""+num);
                    data.add(num1);
                    String unite = fiche.get("unite_Monaie").toString();
//                    data.add("No : "+fiche.get("Num_magasin").toString());
                    data.add("No : "+num1);
                    data.add("Documents/Images/logo.png");
                    data.add(fiche.get("Nom_magasin").toString());
                    data.add("Bp: "+fiche.get("Bp_magasin").toString());
                    data.add("Email: "+fiche.get("Email_magasin").toString());
                    data.add("Tel: "+fiche.get("Tel_magasin").toString());
                    data.add(fiche.get("devise").toString());
                    Set cle = pannierdesproduits.keySet();
                    String[] quant;
                    int prix_unitaire_vente = 0;
                    for (Iterator iterator = cle.iterator(); iterator.hasNext();) {
                        Object next = iterator.next();
                        quant = next.toString().split("--");
                        ProduitMetier p = (ProduitMetier)pannierdesproduits.get(next);
                        prix_unitaire_vente = Integer.parseInt(quant[2]);
                        int t = Integer.parseInt(quant[1])*prix_unitaire_vente;
                        String libele = p.getCode()+" -- "+p.getDesignation();
                        if(libele.length()>25) libele = libele.substring(0,25);
                        data.add(libele+"  "+prix_unitaire_vente+" X "+quant[1]+"  =  "+t+" "+unite);
                    }
                    data.add("TOTAL =   "+total+" "+unite);
                    data.add("TVA =   "+tva+" "+unite);
                    data.add("************************   NET √Ä PAYER =   "+(tva+total)+" "+unite);
                    try{
                        if(Est_un_pret.isSelected()){
                            int fin = (tva+total-Integer.parseInt(avance.getText()));
                            if(fin>0){
                                data.add("MONTANT AVANCE = "+avance.getText()+" "+unite);
                                data.add(" ********** RESTE A PAYER: "+fin+" "+unite);
                            }else{
                                data.add("MONTANT AVANCE = "+(tva+total)+" "+unite);
                                data.add(" ********** RESTE A PAYER: 0 "+unite);
                            }
                        }else{
                            data.add("MONTANT AVANCE = "+(tva+total)+" "+unite);
                            data.add(" ********** RESTE A PAYER: 0 "+unite);  
                        }
                    }catch(Exception e){}
                    data.add("Nom du vendeur : "+PageDeLogin.currentUser.getNom()+" "+PageDeLogin.currentUser.getPrenom());
                    data.add("Nom du Client : "+listeClients.getSelectedItem());
//                    Gestion.utils.GenerateFacture.PrintPDF(data);
                    Gestion.utils.Utils.impression("FKCTicket_"+num1+"_"+Utils.getCurrentTime()+".pdf",9,num);
                    LesDonnees.initData(1);
                    LesDonnees.initData(6);
                    placerlesDonnees();
                    reset();
                    espace.setText("");
                    nouvelleVente();
                    LesDonnees.chargerLesImages();
                }else{
                    PagePrincipale.AfficherMessage(Gestion.vues.Messages.MessagePasserelle.erreur_ajoutvente,3);
                }
            }
        }else{
           PagePrincipale.AfficherMessage("PANNIER VIDE",2); 
        }
    }
    
    private void reset(){
        pt.setText("");
        qte.setValue(1);
        realPU.setText("0");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Est_un_pret;
    private javax.swing.JTextField avance;
    private javax.swing.JTextField code;
    private javax.swing.JPanel commande;
    private javax.swing.JPanel container;
    private javax.swing.JTextField desc;
    private javax.swing.JTextArea espace;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox listeClients;
    private javax.swing.JComboBox listeProduits;
    private javax.swing.JPanel pannier;
    private javax.swing.JPanel previsualisation;
    private javax.swing.JTextField pt;
    private javax.swing.JTextField pu;
    private javax.swing.JSpinner qte;
    private javax.swing.JTextField realPU;
    private javax.swing.JTextField stock;
    private javax.swing.JTable tableau;
    // End of variables declaration//GEN-END:variables
}
