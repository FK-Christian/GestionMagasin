/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gestion.vues.InterfacesGraphiques;

import Gestion.utils.Panneau;
import Gestion.utils.TacheProgression;
import Gestion.utils.Updater;
import Gestion.vues.Messages.LesDonnees;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import org.json.simple.JSONObject;

/**
 *
 * @author christian
 */
public class PagePrincipale extends javax.swing.JFrame {
    private FaireUneVente vendre;
    @SuppressWarnings("FieldMayBeFinal")
    private Executor executor;
    @SuppressWarnings("FieldMayBeFinal")
    private Banniere ban;
    public static String infobule = "";
    private ConfigurateDataBase conf;
    private SaveConfMag confMag;
    private GesCharges gesCharges;
    private GesDettes gesDette;
    private VoirTransactions voirJournal;
    private GestionUsers gesUsers;
    private Notifications notifications;
    private PermuterArticles permutArticle;
    private GesProduits gesProduit;
    private StatistiquesVentes statVentes;
    private AutresStatistiques autreStat;
    private static int mode;
    private TacheProgression progres;
    /**
     * Creates new form PagePrincipale
     */
    
    public PagePrincipale() {
        initComponents();
        this.setIconImage(new ImageIcon("Documents/Images/logo.png").getImage());
        this.setLocationRelativeTo(null);
        executor = Executors.newSingleThreadExecutor();
        ban = new Banniere();
        afficherInfobule();
        TestInternet();
        ConfigurerLeCompte(PageDeLogin.currentUser.getTypeuser());
        //executor.execute(ban);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu6 = new javax.swing.JMenu();
        jSeparator15 = new javax.swing.JSeparator();
        jMenuItem18 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        utilisateur = new javax.swing.JButton();
        voirInternet = new javax.swing.JTextField();
        banierre = new Gestion.utils.Panneau("Documents/Images/accueil.jpg");
        principal = new javax.swing.JPanel();
        panMessage = new javax.swing.JPanel();
        messager = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        separeteur1 = new javax.swing.JPopupMenu.Separator();
        menu1 = new javax.swing.JMenuItem();
        separateur2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem15 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator17 = new javax.swing.JPopupMenu.Separator();
        jMenuItem20 = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem11 = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jMenuItem14 = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jSeparator16 = new javax.swing.JPopupMenu.Separator();
        jMenuItem19 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        jMenuItem13 = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JPopupMenu.Separator();
        menulicence = new javax.swing.JMenuItem();

        jMenu6.setText("jMenu6");

        jMenuItem18.setText("jMenuItem18");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MAgGes");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jToolBar1.setRollover(true);

        utilisateur.setBackground(new java.awt.Color(255, 255, 255));
        utilisateur.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        utilisateur.setForeground(new java.awt.Color(51, 51, 255));
        utilisateur.setText("Bienvenu Mr Fodoup");
        utilisateur.setToolTipText("");
        utilisateur.setFocusable(false);
        utilisateur.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        utilisateur.setPreferredSize(new java.awt.Dimension(143, 50));
        utilisateur.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        utilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilisateurActionPerformed(evt);
            }
        });
        jToolBar1.add(utilisateur);

        voirInternet.setEditable(false);
        voirInternet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        voirInternet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        voirInternet.setText("jTextField2");
        voirInternet.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jToolBar1.add(voirInternet);

        banierre.setBackground(new java.awt.Color(255, 255, 255));
        banierre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout banierreLayout = new javax.swing.GroupLayout(banierre);
        banierre.setLayout(banierreLayout);
        banierreLayout.setHorizontalGroup(
            banierreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
        );
        banierreLayout.setVerticalGroup(
            banierreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(banierre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(banierre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        principal.setBackground(new java.awt.Color(204, 204, 204));
        principal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout principalLayout = new javax.swing.GroupLayout(principal);
        principal.setLayout(principalLayout);
        principalLayout.setHorizontalGroup(
            principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        principalLayout.setVerticalGroup(
            principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );

        panMessage.setBackground(new java.awt.Color(255, 255, 255));
        panMessage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        messager.setEditable(false);
        messager.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        messager.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        messager.setText("Message");
        messager.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panMessageLayout = new javax.swing.GroupLayout(panMessage);
        panMessage.setLayout(panMessageLayout);
        panMessageLayout.setHorizontalGroup(
            panMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messager, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panMessageLayout.setVerticalGroup(
            panMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(panMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/fichier.png"))); // NOI18N
        jMenu1.setText("Fichier");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Copy.png"))); // NOI18N
        jMenuItem2.setText("Voir les transactions");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(separeteur1);

        menu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/import.png"))); // NOI18N
        menu1.setText("Importer les mises à jour");
        menu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu1ActionPerformed(evt);
            }
        });
        jMenu1.add(menu1);
        jMenu1.add(separateur2);

        jMenuItem15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/export.png"))); // NOI18N
        jMenuItem15.setText("Exporter les mises à jour");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem15);
        jMenu1.add(jSeparator1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Exit.png"))); // NOI18N
        jMenuItem4.setText("Quitter");
        jMenuItem4.setToolTipText("");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Designer.png"))); // NOI18N
        jMenu2.setText("Gestion");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Money.png"))); // NOI18N
        jMenuItem1.setText("Faire une vente");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator17);

        jMenuItem20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/replace.png"))); // NOI18N
        jMenuItem20.setText("Echanger un Article");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem20);
        jMenu2.add(jSeparator10);

        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/get.png"))); // NOI18N
        jMenuItem12.setText("Solde Des Dettes");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);
        jMenu2.add(jSeparator7);

        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/boite-en-bas-icone-8973-32.png"))); // NOI18N
        jMenuItem11.setText("Gestions des Produits");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);
        jMenu2.add(jSeparator9);

        jMenuItem14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Work_area.png"))); // NOI18N
        jMenuItem14.setText("Gestion des Utilisateurs");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem14);
        jMenu2.add(jSeparator8);

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Coins.png"))); // NOI18N
        jMenuItem10.setText("Gestion Des Charges");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);
        jMenu2.add(jSeparator5);

        jMenuItem21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/sms.png"))); // NOI18N
        jMenuItem21.setText("Notifications");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem21);

        jMenuBar1.add(jMenu2);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/3d_bar_chart.png"))); // NOI18N
        jMenu3.setText("Statistiques");

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/3d_graph.png"))); // NOI18N
        jMenuItem8.setText("Statistiques des Ventes");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);
        jMenu3.add(jSeparator6);

        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/bar-tableau-graphique-rapport-icone-5031-48.png"))); // NOI18N
        jMenuItem9.setText("Autres statistiques");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Settings.png"))); // NOI18N
        jMenu4.setText("Parametres");
        jMenu4.add(jSeparator16);

        jMenuItem19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/param.jpg"))); // NOI18N
        jMenuItem19.setText("Parametres Du Magasin");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem19);
        jMenu4.add(jSeparator3);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Search computer.png"))); // NOI18N
        jMenuItem5.setText("Configurer la BD");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);
        jMenu4.add(jSeparator2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/tva.png"))); // NOI18N
        jMenuItem3.setText("Configurer les TVA");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);
        jMenu4.add(jSeparator13);

        jMenu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/bd.png"))); // NOI18N
        jMenu8.setText("Mis à jours complet de la BD");

        jMenuItem16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/export.png"))); // NOI18N
        jMenuItem16.setText("Exporter toute la BD");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem16);
        jMenu8.add(jSeparator14);

        jMenuItem17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/import.png"))); // NOI18N
        jMenuItem17.setText("Importer toute la BD");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem17);

        jMenu4.add(jMenu8);

        jMenuBar1.add(jMenu4);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Help.png"))); // NOI18N
        jMenu5.setText("Aide");

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/Info.png"))); // NOI18N
        jMenuItem6.setText("Auteurs");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem6);
        jMenu5.add(jSeparator4);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/index.jpg"))); // NOI18N
        jMenuItem7.setText("Guide d'utilisation");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);
        jMenu5.add(jSeparator11);

        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/update.jpg"))); // NOI18N
        jMenuItem13.setText("Mettre à jour ");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem13);
        jMenu5.add(jSeparator12);

        menulicence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gestion/Images/Icons/unlock.png"))); // NOI18N
        menulicence.setText("Enregistrer Ce Produit");
        menulicence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menulicenceActionPerformed(evt);
            }
        });
        jMenu5.add(menulicence);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void utilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilisateurActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        new ModifyCurentUser(this,true).setVisible(true);
    }//GEN-LAST:event_utilisateurActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        vendre = new FaireUneVente();
        ChangerContenairePrincipal(vendre.getContainer());
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        conf = new ConfigurateDataBase(this,true,false);
        conf.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Message",0);
            new ConfigurateTVA(this,true).setVisible(true);
        }else PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Message",0);
            voirJournal = new VoirTransactions();
            ChangerContenairePrincipal(voirJournal.getContainer());
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        gesUsers = new GestionUsers();
        ChangerContenairePrincipal(gesUsers.getContainer());
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        gesProduit = new GesProduits();
        ChangerContenairePrincipal(gesProduit.getContainer());
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Message",0);
            statVentes = new StatistiquesVentes();
            ChangerContenairePrincipal(statVentes.getContainer());
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        if(testLicence()){    
            PagePrincipale.AfficherMessage("Message",0);
            autreStat = new AutresStatistiques();
            ChangerContenairePrincipal(autreStat.getContainer());
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        new ViewAuteurs(this,true).setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        try {
            Desktop.getDesktop().open(new File("Documents/Licence/aide.chm"));
        } catch (IOException ex) {
            Gestion.utils.Utils.addMessage("PagePrincipale:ouvrirAide:fichier aide",true);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Message",0); 
            gesCharges = new GesCharges();
            ChangerContenairePrincipal(gesCharges.getContainer());
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Message",0); 
            gesDette = new GesDettes();
            ChangerContenairePrincipal(gesDette.getContainer());
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void menu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu1ActionPerformed
        if(testLicence()){
            mode = 1;
            progres = new TacheProgression();
            progres.SetTache(new JOB_EXPORT_IMPORT());
            AfficheProgression(progres.getProgression(),true);
            repaint();
            show();
            progres.Lancer();
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_menu1ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        if(testLicence()){
            mode = 0;
            progres = new TacheProgression();
            progres.SetTache(new JOB_EXPORT_IMPORT());
            AfficheProgression(progres.getProgression(),true);
            repaint();
            show();
            progres.Lancer();
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        if(testLicence()){
            mode = 2;
            progres = new TacheProgression();
            progres.SetTache(new JOB_EXPORT_IMPORT());
            AfficheProgression(progres.getProgression(),true);
            repaint();
            show();
            progres.Lancer();
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        if(testLicence()){
            mode = 3;
            progres = new TacheProgression();
            progres.SetTache(new JOB_EXPORT_IMPORT());
            AfficheProgression(progres.getProgression(),true);
            repaint();
            show();
            progres.Lancer();
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        PagePrincipale.AfficherMessage("Message",0);
        confMag = new SaveConfMag(this,true);
        confMag.setVisible(true);
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Verification des mises à jour ...",4);
//            executor.execute(new TestUpdate());
            progres = new TacheProgression();
            progres.SetTache(new TestUpdate_V2());
            AfficheProgression(progres.getProgression(),true);
            repaint();
            show();
            progres.Lancer();
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void menulicenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menulicenceActionPerformed
       ControleLicence cl =  new ControleLicence(false);
       cl.setVisible(true);
       if(testLicence()){
           jMenu5.remove(menulicence);
           jMenu5.remove(jSeparator12);
        }
    }//GEN-LAST:event_menulicenceActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Message",0);
            permutArticle = new PermuterArticles();
            ChangerContenairePrincipal(permutArticle.getContainer());
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        if(testLicence()){
            PagePrincipale.AfficherMessage("Message",0);
            notifications = new Notifications();
            ChangerContenairePrincipal(notifications.getContainer());
        }else{
            PagePrincipale.AfficherMessage("Cette fonctionnalité n'est pas disponible en version d'essai !!!",2); 
        }
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void ChangerContenairePrincipal(JPanel newPanneau){
        principal.removeAll();
        principal.setLayout(new CardLayout(0,0));
        principal.add(newPanneau);
        repaint();
        show();
    }
    
    public static void AfficheProgression(JProgressBar jpr, boolean voir){
        panMessage.removeAll();
        panMessage.setLayout(new CardLayout(0,0));
        if(voir){
            panMessage.add(jpr);
        }else{
            panMessage.add(messager);
        }
    }
    
    public static void AfficherMessage(String msg,int type){
        switch(type){
            case 0:{ //initialiser
                messager.setForeground(Color.black);
            }
            break;
            case 1:{ //success
                messager.setForeground(Color.green);
            }
            break;
            case 2:{ //avertissement
                messager.setForeground(Color.orange);
            }
            break;
            case 3:{ //erreur
                messager.setForeground(Color.red);
            }
            break;
            case 4:{ //erreur
                messager.setForeground(Color.blue);
            }
            break;
        }
        messager.setText(msg);
    }

    private void ConfigurerLeCompte(String typeuser) {
        if(typeuser.equals("Vendeur")){
            jMenu1.remove(jMenuItem2);
            jMenu1.remove(jSeparator1);
            jMenu2.remove(jMenuItem11);
            jMenu2.remove(jMenuItem14);
            jMenu2.remove(jSeparator7);
            jMenu2.remove(jSeparator9);
            jMenu4.remove(jMenuItem3);
            jMenu4.remove(jSeparator2);
            jMenu1.remove(jMenuItem15);
//            jMenu1.remove(menu1);
//            jMenu1.remove(separeteur1);
//            jMenu1.remove(separateur2);
            jMenu2.remove(jMenuItem10);
            jMenuBar1.remove(jMenu3);
            jMenuBar1.remove(jMenu4);
        }else{
            if(typeuser.equals("Gestionnaire")){
                jMenu1.remove(jMenuItem2);
                jMenu1.remove(separeteur1);  
                jMenu4.remove(jMenu8);
                jMenu4.remove(jSeparator13);
                jMenu4.remove(jMenuItem5);
                jMenu4.remove(jSeparator3);
            }
        }
        if(testLicence()){
           jMenu5.remove(menulicence);
           jMenu5.remove(jSeparator12);
        }
    }
    
    private boolean testLicence(){
        return Gestion.utils.Utils.provider("Documents/Licence/licence.properties").get("licence").toString().equals("KANA_FODOUP_SINDA(KFS)");
    }
    
    private void TestInternet(){
        if(Gestion.utils.Utils.TestConnectionInternet()){
            voirInternet.setForeground(Color.green);
            voirInternet.setText("ACCES INTERNET");
        }else{
            voirInternet.setForeground(Color.red);
            voirInternet.setText("PAS ACCES INTERNET");          
        }
    }
    
    class Banniere implements Runnable{
        private JSONObject lesPhotos;
        private int position;
        private boolean flag;

        public Banniere() {
            this.position = -1;
            lesPhotos = new JSONObject();
            this.getTousLesPhotos();
            flag = true;
        }
        
        @Override
        public void run() {
            while(flag){
                try {
                    this.Afficher(lesPhotos.get(""+getPosition()).toString());
                    Thread.sleep(5000);
                } catch (InterruptedException ex) {
                    Gestion.utils.Utils.addMessage(ex.toString(),true);
                }
            }
        }
        private int getPosition(){
            position++;
            if(position==lesPhotos.size()){
                position = 0;
            }
            return position;
        }
        private void getTousLesPhotos(){
            File fichier = new File("Documents/Images/Banieres");
            File[] f = fichier.listFiles();
            for (int i = 0; i < f.length; i++) {
                File f1 = f[i];
                lesPhotos.put(""+i,f1.getAbsolutePath());
            }
        }
        private void Afficher(String nomPhoto){
            ((Panneau)banierre).setphoto(nomPhoto);
            ((Panneau)banierre).repaint();
        }
    }
    
    public static void afficherInfobule(){
        utilisateur.setText("Bienvenu "+PageDeLogin.currentUser.getNom()+" "+PageDeLogin.currentUser.getPrenom());
        infobule = "";
        infobule += "<html><p style=\"COLOR:BLUE\">"
                  + "Nom: "+PageDeLogin.currentUser.getNom()+"<br/>"
                  + "Prenom: "+PageDeLogin.currentUser.getPrenom()+"<br/>"
                  + "Type: "+PageDeLogin.currentUser.getTypeuser()+"<br/>"
                  + "Login: "+PageDeLogin.currentUser.getLogin()
                  + "</p></html>";
        utilisateur.setToolTipText(infobule);
    }
    
    private void EXPORT_IMPORT(){
        PagePrincipale.AfficherMessage("Message",0);
        String fichier = Gestion.utils.Utils.provider("Documents/parametres/param.properties").get("datas").toString();
        String fichierAll = Gestion.utils.Utils.provider("Documents/parametres/param.properties").get("Alldatas").toString();
            switch(mode){
                case 0: // EXPORT 
                    if(Gestion.utils.Utils.TestConnectionInternet()){
                        if(Gestion.utils.DataUtils.exportDATA()){
                            try {
                                Gestion.utils.Zip.compress("Documents/Datas/", fichier+".zip");
                                Gestion.utils.Utils.SaveOrGetInInternet(true);
                                PagePrincipale.AfficherMessage("Exportation effectuée avec success !!!",1);
                            } catch (Exception ex) {
                                ex.printStackTrace();
                                PagePrincipale.AfficherMessage("Erreur d'exportation !!!",3);
                            }
                        }else{
                            PagePrincipale.AfficherMessage("Erreur d'exportation !!!",3);
                        }
                    }else{
                        PagePrincipale.AfficherMessage("Pas d'acces internet !!!",2);
                    }
                break;
                case 1: // IMPORT 
                    if(Gestion.utils.Utils.TestConnectionInternet()){
                            try {
                               Gestion.utils.Utils.SaveOrGetInInternet(false);
                               Gestion.utils.Zip.decompress(fichier+".zip","Documents/",true);
                                if(Gestion.utils.DataUtils.importDATA(Gestion.utils.Utils.importfile(),false)){
                                    PagePrincipale.AfficherMessage("Importation effectuée avec success !!!",1);
                                    LesDonnees.initData(1);
                                    LesDonnees.initData(6);
                                }else{
                                    PagePrincipale.AfficherMessage("Erreur d'importation !!!",3);
                                }
                            } catch (Exception ex) {
                                ex.printStackTrace();
                                PagePrincipale.AfficherMessage("Erreur d'importation !!!",3);
                            }
                    }else{
                        PagePrincipale.AfficherMessage("Pas d'acces internet !!!",2);
                    }
                break;
                case 2: // EXPORT ALL
                    if(Gestion.utils.Utils.TestConnectionInternet()){
                        if(Gestion.utils.DataUtils.exportAllDATA()){
                            try {
                                Gestion.utils.DataUtils.exportDATA();
                                Gestion.utils.Zip.compress("Documents/Datas/", fichier+".zip");
                                Gestion.utils.Zip.compress("Documents/DatasAll/", fichierAll+".zip");
                                Gestion.utils.Utils.SaveOrGetInInternetAll(true);
                                PagePrincipale.AfficherMessage("Exportation effectuée avec success !!!",1);
                            } catch (Exception ex) {
                                ex.printStackTrace();
                                PagePrincipale.AfficherMessage("Erreur d'exportation !!!",3);
                            }
                        }else{
                            PagePrincipale.AfficherMessage("Erreur d'exportation !!!",3);
                        }
                    }else{
                        PagePrincipale.AfficherMessage("Pas d'acces internet !!!",2);
                    }   
                break;
                case 3: // IMPORT ALL
                    if(Gestion.utils.Utils.TestConnectionInternet()){
                            try {
                                Gestion.utils.Utils.SaveOrGetInInternetAll(false);
                                Gestion.utils.Zip.decompress(fichierAll+".zip","Documents/",true);
                                if(Gestion.utils.DataUtils.importDATA(Gestion.utils.Utils.importAllfile(),true)){
                                    PagePrincipale.AfficherMessage("Importation effectuée avec success !!!",1);
                                    LesDonnees.initData(1);
                                    LesDonnees.initData(6);
                                }else{
                                    PagePrincipale.AfficherMessage("Erreur d'importation !!!",3);
                                }
                            } catch (Exception ex) {
                                ex.printStackTrace();
                                PagePrincipale.AfficherMessage("Erreur d'importation !!!",3);
                            }
                    }else{
                        PagePrincipale.AfficherMessage("Pas d'acces internet !!!",2);
                    }
                break;
                default: 
                break;
            }
    }
    
    private class JOB_EXPORT_IMPORT implements Runnable{
        @Override
        public void run() {
            EXPORT_IMPORT();
        } 
    }
    
//    private class TestUpdate implements Runnable{
//        @Override
//        public void run() {
//            if(Gestion.utils.Utils.TestConnectionInternet()){
//                if(Gestion.utils.Utils.testerLesMiseAjours()){
//                    int reponse = JOptionPane.showConfirmDialog(null, "Une mise à jour a été détectée \n Voulez vous fermer l'application pour la mettre à jour ?", "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
//                    if(reponse == JOptionPane.YES_OPTION){
//                        try {
//                            Desktop.getDesktop().open(new File("Update.bat"));
//                            System.exit(0);
//                        } catch (IOException ex) { 
//                            PagePrincipale.AfficherMessage("Une erreure c'est produite !!!",2);
//                        }
//                    }
//                }else{
//                    PagePrincipale.AfficherMessage("Pas de mise à jour disponible !!!",2);
//                }
//            }else{
//                PagePrincipale.AfficherMessage("Pas d'acces à internet !!!",3);
//            }
//        }
//        
//    }
    
    private class TestUpdate_V2 implements Runnable{
        @Override
        public void run() {
            if(Gestion.utils.Utils.TestConnectionInternet()){
                (new Updater()).Check_And_Run_Updates();
            }else{
                PagePrincipale.AfficherMessage("Pas d'acces internet !!!",2);
            }
        }
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel banierre;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JPopupMenu.Separator jSeparator16;
    private javax.swing.JPopupMenu.Separator jSeparator17;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem menu1;
    private javax.swing.JMenuItem menulicence;
    public static javax.swing.JTextField messager;
    private static javax.swing.JPanel panMessage;
    private javax.swing.JPanel principal;
    private javax.swing.JPopupMenu.Separator separateur2;
    private javax.swing.JPopupMenu.Separator separeteur1;
    public static javax.swing.JButton utilisateur;
    private javax.swing.JTextField voirInternet;
    // End of variables declaration//GEN-END:variables
}
